import { CommandDefinition, CommandContext } from '../base.js';
import { getAvailableCommands } from '../index.js';

export const helpCommand: CommandDefinition = {
  command: 'help',
  description: 'Show help and available commands',
  handler: ({ addMessage }: CommandContext) => {
    const commands = getAvailableCommands();
    const commandList = commands.map(cmd => {
      const aliases = cmd.aliases ? ` (aliases: ${cmd.aliases.map(a => `/${a}`).join(', ')})` : '';
      return `/${cmd.command}${aliases} - ${cmd.description}`;
    }).join('\n');
    
    const agentCommandsHelp = `

ðŸ¤– **Agent System Commands:**
â€¢ \`/agent <name>\` - Switch to specific agent
â€¢ \`/agents\` - List all available agents  
â€¢ \`/agent-create <name> <prompt>\` - Create new agent
â€¢ \`/agent-delete <name>\` - Delete custom agent
â€¢ \`/system <prompt>\` - Set temporary system prompt
â€¢ \`/system-reset\` - Reset to default prompt
â€¢ \`/agent-export <name> <file>\` - Export agent to file
â€¢ \`/agent-import <file>\` - Import agent from file

ðŸŽ¯ **Pre-built Agents:**
â€¢ \`reviewer\` - Code review specialist
â€¢ \`architect\` - System design expert
â€¢ \`debugger\` - Bug finding specialist  
â€¢ \`teacher\` - Educational mentor
â€¢ \`optimizer\` - Performance expert`;

    addMessage({
      role: 'system',
      content: `Available Commands:
${commandList}${agentCommandsHelp}

Navigation:
- Use arrow keys to navigate chat history
- Type '/' to see available slash commands
- Use arrow keys to navigate slash command suggestions
- Press Enter to execute the selected command

Keyboard Shortcuts:
- **ESC** - Smart interrupt control:
  â€¢ Clear input text when typing
  â€¢ Interrupt AI processing (not tool execution)
  â€¢ Reject tool approval when prompted
  â€¢ Show this help when nothing else applies
- **Ctrl+C** - Force exit the CLI (double press if needed)
- **Shift+Tab** - Toggle auto-approval for editing tools

ðŸš¨ **Interrupt Guide:**
â€¢ **Safe to interrupt**: AI thinking, generating responses
â€¢ **Cannot interrupt**: Tool execution in progress
â€¢ **ESC doesn't work?** Try Ctrl+C for immediate exit
â€¢ **In infinite loop?** ESC during "Processing..." state

This is a highly customizable, lightweight, and open-source coding CLI powered by Groq. Ask for help with coding tasks, debugging issues, or explaining code.`
    });
  }
};